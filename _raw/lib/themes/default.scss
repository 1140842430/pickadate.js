
/**
 * Default mobile-first, responsive styling for pickadate.js
 * Demo: http://amsul.github.com/pickadate.js/themes.htm#default
 */


/* ==========================================================================
   $PICKER-BASE
   ========================================================================== */

@import "variables";


/**
 * When the picker is opened, add an "active" state to the input
 */
/*input*/.picker__input--active {

    // Using `!important` here because `input[type=text]`
    // has higher priority than just a class selector
    border-color: $input-active-border !important;
}


/**
 * Make the holder and frame fullscreen
 */
.picker__holder,
.picker__frame {
    bottom: 0;
    left: 0;
    right: 0;

    /* Nudge everything off-screen to begin with */
    top: 100%;
}


/**
 * The holder that overlays the entire screen
 */
.picker__holder {

    /* The base font stylings */
    font-size: $base-font-size;
    text-align: left;
    line-height: $base-line-height;
    color: $black;

    /* Fill the screen */
    position: fixed;
    z-index: $overlay-z-index;
    width: 100%;
    height: 100%;

    /* Allow the holder to be scrolled in case the content doesn't fit */
    overflow-y: scroll;
    -webkit-overflow-scrolling: touch;

    /* Fade out the background, then immediately shift the holder out of view */
    @include prefix( transition, (background $speed-animate-in ease-out, top 0s $speed-animate-in ) );
}

/* When the picker opens, fade in an overlay */
.picker__holder--opened {

    /* Move it to the top edge */
    top: 0;

    /* Show a translucent black background (order is important for IE) */
    background: transparent;
    -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr=#1E000000,endColorstr=#1E000000)"; // IE8
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#1E000000,endColorstr=#1E000000); // IE6 & 7
          zoom: 1;
    background: rgba(0,0,0,.32); // Normal browsers

    /* Animate in the background */
    @include prefix( transition, background $speed-animate-in ease-out );
}




/**
 * The frame that bounds the picker
 */
.picker__frame {
    position: absolute;
    margin: 0 auto;

    min-width: $picker-min-width;
    max-width: $picker-max-width;
    width: 100%; /* For IE9 & 10 to keep it centered */

    /* Hide it to begin with */
    @include opacity( 0 );

    /* Animate the frame in and out of view */
    @include prefix( transition, all $speed-animate-in ease-out );

    /* For `small` screens, prevent from filling height to the top */
    @include min-screen( small ) {
        overflow: visible;
        top: auto;
        bottom: -100%;
    }

    /* For `medium` screens, move away from the bottom edge */
    @include min-screen( medium ) {
        margin-bottom: 5%;
    }


    /**
     * When the picker opens...
     */
    .picker__holder--opened & {

        /* Align it to the top */
        top: 0;

        /* Ã…nd then reveal it */
        @include opacity( 1 );

        /* For `small` screens, align to the bottom instead. */
        @include min-screen( small ) {
            top: auto;
            bottom: 0;
        }
    }
}


/**
 * The picker wrapper
 */
.picker__wrap {
    display: table;
    width: 100%;
    height: 100%;

    /* For `small` screens, remove the "middle-aligned" styling */
    @include min-screen( small ) {
        display: block;
    }
}



/**
 * The picker box
 */
.picker__box {
    display: table-cell;
    vertical-align: middle;
    background: $white;
    padding: 0 1em;

    /* For `tiny` screens, increase the font size a bit */
    @include min-screen( tiny ) {
        font-size: 1.25em;
    }

    /* For `small` screens... */
    @include min-screen( small ) {

        /* Remove the "middle-aligned" styling */
        display: block;

        /* Increase the font size a bit more */
        font-size: 1.33em;

        /* Add the borders except the bottom one */
        border: 1px solid $grey-border;
        border-top-color: lighten( $grey-border, 7% );
        border-bottom-width: 0;

        /* Make 'em rounded at the top corners */
        @include prefix( border-radius, $picker-border-radius $picker-border-radius 0 0 );

        /* And finally, add a nice shadow */
        @include prefix( box-shadow, $picker-box-shadow );
    }

    /* For `medium` screens, increase the font size and round all corners */
    @include min-screen( medium ) {
        font-size: 1.5em;
        border-bottom-width: 1px;
        @include prefix( border-radius, $picker-border-radius );
    }
}





/**
 * For `large` screens, transform into an inline picker.
 * /
@include min-screen( large ) {

    .picker__holder {
        position: relative;
        max-height: 25em;
        background: red;
        border: 1px solid #ccc;
        box-sizing: border-box;
        margin-top: 1em;
        font-size: 11px;
        border-radius: 5px;
    }

    .picker__frame,
    .picker__holder--time .picker__frame {
        position: relative;
        bottom: auto;
        max-height: none;
        max-width: none;
        margin-bottom: 0;
        @include opacity( 1 );
    }

    .picker__box,
    .picker__holder--time .picker__box {
        box-shadow: none;
        border: none;
        margin-bottom: 0;
        border-radius: 0;
    }
}

@include min-screen( large ) {

    .picker__holder {
        position: absolute;
        top: auto;
        bottom: auto;
        max-height: 0;
        @include opacity( 0 );
        @include prefix( transition, all $speed-animate-in ease-out );
    }
    .picker__holder--opened {
        max-height: 25em;
        @include opacity( 1 );
    }
}*/